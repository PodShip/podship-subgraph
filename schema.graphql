type PodSale @entity {
  id: ID!
  auctionId: ID
  podcast: Podcast!
  # isOnSale: Boolean #set isOnsale = true when OfferCreated, AuctionCreated is emitted, and isOnSale = false when OfferCancelled, OfferPurchased, AuctionCancelled, AuctionPurchased, AuctionResulted is called
  amount: BigInt #can be reserved_price for auction or price for fixed
  isOnSale: Boolean
  startTime: BigInt
  endTime: BigInt
  duration: BigInt
  buyer: User
  seller: User
}

type Podcast @entity {
  id: ID!
  metadataURI: String
  baseURI: String
  created: BigInt
  ownerAddress: User
  creator: User
}



type User @entity{
  id: ID!
  podcasts: [Podcast!] @derivedFrom(field: "ownerAddress")
  isRecentWinner: Boolean
  created: [Podcast!] @derivedFrom(field: "creator")
  bids: [Bid!] @derivedFrom(field: "bidder")
}

type Tip @entity{
  id: ID!
  tip: BigInt
  podcast: Podcast
}


type Bid @entity{
  id: ID!
  auctionId: ID
  bidder: User
  adrr: String
  bid: BigInt
}


# type ApprovalForAll @entity {
#   id: ID!
#   account: Bytes! # address
#   operator: Bytes! # address
#   approved: Boolean! # bool
# }

# type OwnershipTransferred @entity {
#   id: ID!
#   previousOwner: Bytes! # address
#   newOwner: Bytes! # address
# }

# type TransferBatch @entity {
#   id: ID!
#   operator: Bytes! # address
#   from: Bytes! # address
#   to: Bytes! # address
#   ids: [BigInt]! # uint256[]
#   values: [BigInt]! # uint256[]
# }

# type TransferSingle @entity {
#   id: ID!
#   operator: Bytes! # address
#   from: Bytes! # address
#   to: Bytes! # address
#   id: BigInt! # uint256
#   value: BigInt! # uint256
# }

# type URI @entity {
#   id: ID!
#   value: String! # string
#   id: BigInt! # uint256
# }
